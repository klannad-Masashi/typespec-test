package {{ config.spring.base_package }}.{{ api_name }}api.controller;

import org.springframework.web.bind.annotation.*;
import javax.validation.Valid;
import java.util.List;
import java.time.LocalDateTime;

{% for model_name, model in models.items() %}
import {{ model.package }}.{{ model_name }};
{% endfor %}

/**
 * {{ controller_name }}
 * TypeSpecから自動生成されたAPIコントローラー
 * 生成日時: {{ generated_at }}
 */
@RestController
public class {{ controller_name }} {

    private final {{ usecase_name }} {{ usecase_var_name }};

    public {{ controller_name }}({{ usecase_name }} {{ usecase_var_name }}) {
        this.{{ usecase_var_name }} = {{ usecase_var_name }};
    }

    @PostMapping("/api/v1/example")
    public V1OutDto v1(@RequestBody @Valid V1InDto v1InDto) {

        // 関連チェック
        v1InDto.combineCheck();

        // ユースケース実行
        final var usecaseResult = {{ usecase_var_name }}.exec(v1InDto.getMinmaxvalue());

        // 後で消す
        usecaseResult.applicationClassificationList().forEach(it -> {
            it.applicationClassificationId();
            it.applicationTypeDiv();
            it.applicationClassificationName();
            it.applicationClassificationDescription();
            it.sortControl();
            it.lastUpdateTimestamp();
        });

        final var result = new V1OutDto(
            v1InDto.getName(),
            v1InDto.getNullablevalue(),
            v1InDto.getMinmaxvalue().toString(),
            new V1OutDtoInnerObject(
                v1InDto.getIndtoinnerobject(),
                "" // TODO: innerLong値の変換
            ),
            v1InDto.getIndtoarrayobjectlist().stream().map(it -> new V1OutDtoArrayObject(
                it
            )).toList(),
            v1InDto.getInstantvalue(),
            v1InDto.getExampleenum()
        );

        result.check();
        return result;
    }
}